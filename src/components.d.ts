/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface LimelButton {
      'disabled': boolean;
      'label': string;
      'loading': boolean;
      'primary': boolean;
    }
  }

  interface HTMLLimelButtonElement extends StencilComponents.LimelButton, HTMLStencilElement {}

  var HTMLLimelButtonElement: {
    prototype: HTMLLimelButtonElement;
    new (): HTMLLimelButtonElement;
  };
  interface HTMLElementTagNameMap {
    'limel-button': HTMLLimelButtonElement;
  }
  interface ElementTagNameMap {
    'limel-button': HTMLLimelButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'limel-button': JSXElements.LimelButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface LimelButtonAttributes extends HTMLAttributes {
      'disabled'?: boolean;
      'label'?: string;
      'loading'?: boolean;
      'primary'?: boolean;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface LimelSpinner {

    }
  }

  interface HTMLLimelSpinnerElement extends StencilComponents.LimelSpinner, HTMLStencilElement {}

  var HTMLLimelSpinnerElement: {
    prototype: HTMLLimelSpinnerElement;
    new (): HTMLLimelSpinnerElement;
  };
  interface HTMLElementTagNameMap {
    'limel-spinner': HTMLLimelSpinnerElement;
  }
  interface ElementTagNameMap {
    'limel-spinner': HTMLLimelSpinnerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'limel-spinner': JSXElements.LimelSpinnerAttributes;
    }
  }
  namespace JSXElements {
    export interface LimelSpinnerAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;